[{"/home/thanh/Desktop/Trackerlist/client/src/index.js":"1","/home/thanh/Desktop/Trackerlist/client/src/App.js":"2","/home/thanh/Desktop/Trackerlist/client/src/reportWebVitals.js":"3","/home/thanh/Desktop/Trackerlist/client/src/components/Layout/Landing/index.js":"4","/home/thanh/Desktop/Trackerlist/client/src/components/views/Auth.js":"5","/home/thanh/Desktop/Trackerlist/client/src/components/Auth/LoginForm.js":"6","/home/thanh/Desktop/Trackerlist/client/src/components/Auth/RegisterForm.js":"7","/home/thanh/Desktop/Trackerlist/client/src/contexts/index.js":"8","/home/thanh/Desktop/Trackerlist/client/src/contexts/constants.js":"9","/home/thanh/Desktop/Trackerlist/client/src/reducers/Authreducer.js":"10","/home/thanh/Desktop/Trackerlist/client/src/components/views/Dashboard.js":"11","/home/thanh/Desktop/Trackerlist/client/src/utils/setAuthtoken.js":"12","/home/thanh/Desktop/Trackerlist/client/src/components/routes/Protectedroutes.js":"13","/home/thanh/Desktop/Trackerlist/client/src/components/Layout/Alertmessage.js":"14","/home/thanh/Desktop/Trackerlist/client/src/components/Layout/Navbarmenu.js":"15","/home/thanh/Desktop/Trackerlist/client/src/components/views/About.js":"16","/home/thanh/Desktop/Trackerlist/client/src/contexts/Postcontext.js":"17","/home/thanh/Desktop/Trackerlist/client/src/reducers/PostsReducer.js":"18","/home/thanh/Desktop/Trackerlist/client/src/components/posts/SinglePost.js":"19","/home/thanh/Desktop/Trackerlist/client/src/components/posts/ActionButtons.js":"20","/home/thanh/Desktop/Trackerlist/client/src/components/posts/AddpostModal.js":"21","/home/thanh/Desktop/Trackerlist/client/src/components/posts/UpdatepostModal.js":"22"},{"size":478,"mtime":1629380891100,"results":"23","hashOfConfig":"24"},{"size":1238,"mtime":1631104859726,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1629372831257,"results":"26","hashOfConfig":"24"},{"size":172,"mtime":1629377684338,"results":"27","hashOfConfig":"24"},{"size":1097,"mtime":1630764915388,"results":"28","hashOfConfig":"24"},{"size":2040,"mtime":1630850011255,"results":"29","hashOfConfig":"24"},{"size":2509,"mtime":1630850043631,"results":"30","hashOfConfig":"24"},{"size":2619,"mtime":1631072306711,"results":"31","hashOfConfig":"24"},{"size":497,"mtime":1631376616227,"results":"32","hashOfConfig":"24"},{"size":308,"mtime":1630767020274,"results":"33","hashOfConfig":"24"},{"size":2845,"mtime":1631353816638,"results":"34","hashOfConfig":"24"},{"size":259,"mtime":1630765609802,"results":"35","hashOfConfig":"24"},{"size":902,"mtime":1630853663460,"results":"36","hashOfConfig":"24"},{"size":240,"mtime":1630850023635,"results":"37","hashOfConfig":"24"},{"size":1393,"mtime":1631072338606,"results":"38","hashOfConfig":"24"},{"size":127,"mtime":1630854618752,"results":"39","hashOfConfig":"24"},{"size":2930,"mtime":1631342902572,"results":"40","hashOfConfig":"24"},{"size":1185,"mtime":1631339709975,"results":"41","hashOfConfig":"24"},{"size":1033,"mtime":1631206176011,"results":"42","hashOfConfig":"24"},{"size":1045,"mtime":1631342134274,"results":"43","hashOfConfig":"24"},{"size":2791,"mtime":1631205155562,"results":"44","hashOfConfig":"24"},{"size":2973,"mtime":1631353856453,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"19dzxcj",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"/home/thanh/Desktop/Trackerlist/client/src/index.js",[],["96","97"],"/home/thanh/Desktop/Trackerlist/client/src/App.js",[],"/home/thanh/Desktop/Trackerlist/client/src/reportWebVitals.js",[],"/home/thanh/Desktop/Trackerlist/client/src/components/Layout/Landing/index.js",[],"/home/thanh/Desktop/Trackerlist/client/src/components/views/Auth.js",[],"/home/thanh/Desktop/Trackerlist/client/src/components/Auth/LoginForm.js",["98"],"import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useState, useContext } from \"react\";\nimport { AuthContext } from \"../../contexts/index\";\nimport Alertmessage from \"../Layout/Alertmessage\";\n\nexport default function Login() {\n  //Context\n  const { loginUser } = useContext(AuthContext);\n\n  //Use history\n  const history = useHistory();\n\n  const [loginForm, setloginForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [alert, setAlert] = useState(null);\n  const { username, password } = loginForm;\n\n  const OnchangeLogin = (e) =>\n    setloginForm({\n      ...loginForm,\n      [e.target.name]: e.target.value,\n    });\n\n  const login = async (e) => {\n    e.preventDefault();\n    try {\n      const loginData = await loginUser(loginForm);\n      if (loginData.success) {\n        // history.push('/dashboard')\n      } else {\n        setAlert({ type: \"danger\", message: loginData.message })\n        setTimeout(()=>setAlert(null),5000)\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <Form className=\"my-4\" onSubmit={login}>\n        <Alertmessage info={alert} />\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            required\n            value={username}\n            onChange={OnchangeLogin}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"my-3\">\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={OnchangeLogin}\n          />\n        </Form.Group>\n        <Button variant=\"success\" type=\"submit\">\n          Login\n        </Button>\n      </Form>\n      <p>\n        Dont have account ?\n        <Link to=\"/register\">\n          <Button variant=\"info\" size=\"sm\" className=\"ml-2\">\n            Register\n          </Button>\n        </Link>\n      </p>\n    </>\n  );\n}\n","/home/thanh/Desktop/Trackerlist/client/src/components/Auth/RegisterForm.js",[],"/home/thanh/Desktop/Trackerlist/client/src/contexts/index.js",[],"/home/thanh/Desktop/Trackerlist/client/src/contexts/constants.js",[],"/home/thanh/Desktop/Trackerlist/client/src/reducers/Authreducer.js",[],"/home/thanh/Desktop/Trackerlist/client/src/components/views/Dashboard.js",["99","100"],"import React from \"react\";\nimport { PostContext } from \"../../contexts/Postcontext\";\nimport { useContext, useEffect } from \"react\";\nimport {\n  Spinner,\n  Card,\n  Button,\n  Row,\n  Col,\n  OverlayTrigger,\n  Tooltip,\n  Toast,\n} from \"react-bootstrap\";\nimport { AuthContext } from \"../../contexts/index\";\nimport SinglePost from \"../posts/SinglePost\";\nimport AddpostModal from \"../posts/AddpostModal\";\nimport AddIcon from \"../../assets/plus-circle-fill.svg\";\nimport UpdatepostModal from '../posts/UpdatepostModal'\n\nconst Dashboard = () => {\n  const {\n    authState: {\n      user: { username },\n    },\n  } = useContext(AuthContext);\n\n  const {\n    postState: { posts, postsLoading,post },\n    getPosts,\n    SetshowAddPostModal,\n    showToast: { show, message, type },\n    SetshowToast,\n  } = useContext(PostContext);\n\n  //Start : Get all posts\n  useEffect(() => getPosts(), []);\n  let body = null;\n  if (postsLoading) {\n    body = (\n      <div className=\"spinner-container\">\n        <Spinner animation=\"border\" role=\"status\" variant=\"info\" />\n      </div>\n    );\n  } else if (posts.length == 0) {\n    body = (\n      <>\n        <Card className=\"text-center mx-5 my-5\">\n          <Card.Header as=\"h1\">Hi {username}</Card.Header>\n          <Card.Body>\n            <Card.Title>Welcome to my website</Card.Title>\n            <Card.Text>\n              Click the button below to track your first skill to learn\n            </Card.Text>\n            <Button variant=\"primary\" onClick={SetshowAddPostModal.bind(this,true)}>Learn It</Button>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  } else {\n    body = (\n      <>\n        <Row className=\"row-cols-1 row-cols-md-3 g-4 mx-auto mt-3\">\n          {posts.map((post) => {\n            return (\n              <Col key={post._id} className=\"my-2\">\n                <SinglePost post={post} />\n              </Col>\n            );\n          })}\n        </Row>\n\n        {/* Open Add Post Modal */}\n        <OverlayTrigger placement='left' overlay={<Tooltip>Add a new thing to learn</Tooltip>}>\n        <Button\n          className=\"btn-floating\"\n          onClick={SetshowAddPostModal.bind(this, true)}\n        >\n          <img src={AddIcon} alt=\"Addicon\" width=\"60\" height=\"60\" />\n        </Button>\n        </OverlayTrigger>\n      </>\n    );\n  }\n\n  return (\n    <>\n     <Toast\n        show={show}\n        style={{ position: \"fiexed\", top: \"20%\", right: \"10px\" }}\n        className={`bg-${type} text-white float-left`}\n        onClose={SetshowToast.bind(this,{show:false,message:'',type:null})}\n        delay={3000}\n        autohide\n      >\n        <Toast.Body>\n          <strong> {message} </strong>\n        </Toast.Body>\n      </Toast>\n      {body}\n      <AddpostModal />\n      {post !==null && <UpdatepostModal/>}\n      {/* After post is added ,show toast */}\n     \n    </>\n  );\n};\n\nexport default Dashboard;\n","/home/thanh/Desktop/Trackerlist/client/src/utils/setAuthtoken.js",[],"/home/thanh/Desktop/Trackerlist/client/src/components/routes/Protectedroutes.js",[],"/home/thanh/Desktop/Trackerlist/client/src/components/Layout/Alertmessage.js",[],"/home/thanh/Desktop/Trackerlist/client/src/components/Layout/Navbarmenu.js",[],"/home/thanh/Desktop/Trackerlist/client/src/components/views/About.js",[],"/home/thanh/Desktop/Trackerlist/client/src/contexts/Postcontext.js",[],"/home/thanh/Desktop/Trackerlist/client/src/reducers/PostsReducer.js",[],"/home/thanh/Desktop/Trackerlist/client/src/components/posts/SinglePost.js",["101"],"import React from \"react\";\nimport { Card, Row, Badge, Button, Col } from \"react-bootstrap\";\nimport ActionButtons from \"./ActionButtons\";\n\nconst SinglePost = ({ post: { _id, status, title, description, url } }) => {\n  var border =status === \"LEARNED\"\n  ? \"success\"\n  : status === \"LEARNING\"\n  ? \"warning\"\n  : \"danger\";\n\n  return (\n    <Card className={`shadow border border-${border}`}>\n      <Card.Body>\n        <Card.Title>\n          <Row>\n            <Col>\n              <p className=\"post-title\">{title}</p>\n              <Badge\n                pill\n                variant={\n                  ` border border-${border}`\n                }\n                className={`text-${border}`}\n              >\n                {status}\n              </Badge>\n            </Col>\n            <Col className=\"text-right\">\n              <ActionButtons url={url} _id={_id} />\n            </Col>\n          </Row>\n        </Card.Title>\n        <Card.Text>{description}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SinglePost;\n","/home/thanh/Desktop/Trackerlist/client/src/components/posts/ActionButtons.js",[],"/home/thanh/Desktop/Trackerlist/client/src/components/posts/AddpostModal.js",["102"],"import React from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useContext, useState } from \"react\";\nimport { PostContext } from \"../../contexts/Postcontext\";\n\nconst AddpostModal = () => {\n  //Context\n  const { SetshowAddPostModal, showAddPostModal, addPost, SetshowToast } =\n    useContext(PostContext);\n  const closeDialog = () => {\n    setnewPost({\n      title: \"\",\n      description: \"\",\n      url: \"\",\n      status: \"TO LEARN\",\n    });\n    SetshowAddPostModal(false);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const { success, message } = await addPost(newPost);\n    resetAddPostdata();\n    SetshowToast({ show: true, message, type: true ? \"success\" : \"danger\" });\n  };\n\n  const resetAddPostdata = () => {\n    setnewPost({\n      title: \"\",\n      description: \"\",\n      url: \"\",\n      status: \"TO LEARN\",\n    });\n    SetshowAddPostModal(false);\n  };\n  //State\n  const [newPost, setnewPost] = useState({\n    title: \"\",\n    description: \"\",\n    url: \"\",\n    status: \"TO LEARN\",\n  });\n  const { title, description, url } = newPost;\n\n  const onChangeNewPostForm = (e) =>\n    setnewPost({\n      ...newPost,\n      [e.target.name]: e.target.value,\n    });\n\n  return (\n    <Modal show={showAddPostModal} animation={false} onHide={closeDialog}>\n      <Modal.Header closeButton>\n        <Modal.Title>What do you want to learn ?</Modal.Title>\n      </Modal.Header>\n      <Form onSubmit={onSubmit}>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Title\"\n              name=\"title\"\n              required\n              aria-describedby=\"title-help\"\n              value={title}\n              onChange={onChangeNewPostForm}\n            />\n            <Form.Text id=\"title-help\" muted>\n              Required\n            </Form.Text>\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              as=\"textarea\"\n              placeholder=\"Description\"\n              row={3}\n              name=\"description\"\n              value={description}\n              onChange={onChangeNewPostForm}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Youtube Tutorial URL\"\n              name=\"url\"\n              value={url}\n              onChange={onChangeNewPostForm}\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeDialog}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n          >\n            Learnit\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AddpostModal;\n","/home/thanh/Desktop/Trackerlist/client/src/components/posts/UpdatepostModal.js",["103"],"import React, { useEffect } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useContext, useState } from \"react\";\nimport { PostContext } from \"../../contexts/Postcontext\";\n\nconst UpdatepostModal = () => {\n  //Context\n  const {\n    SetshowUpdatePostModal,\n    showUpdatePostModal,\n    updatePost,\n    SetshowToast,\n    postState: { post },\n  } = useContext(PostContext);\n\n  //Render post\n  useEffect(() => {\n    setnewPost(post);\n  }, [post]);\n\n  //Close\n  const closeDialog = () => {\n    setnewPost(post);\n    SetshowUpdatePostModal(false);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const { success, message } = await updatePost(newPost);\n    closeDialog();\n    SetshowToast({ show: true, message, type: true ? \"success\" : \"danger\" });\n  };\n\n  //State\n  const [newPost, setnewPost] = useState(post);\n  const { title, description, url, status } = newPost;\n\n  const onChangeNewPostForm = (e) =>\n    setnewPost({\n      ...newPost,\n      [e.target.name]: e.target.value,\n    });\n\n  return (\n    <Modal show={showUpdatePostModal} onHide={closeDialog}>\n      <Modal.Header closeButton>\n        <Modal.Title>Making Progress ?</Modal.Title>\n      </Modal.Header>\n      <Form onSubmit={onSubmit}>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Title\"\n              name=\"title\"\n              required\n              aria-describedby=\"title-help\"\n              value={title}\n              onChange={onChangeNewPostForm}\n            />\n            <Form.Text id=\"title-help\" muted>\n              Required\n            </Form.Text>\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              as=\"textarea\"\n              placeholder=\"Description\"\n              row={3}\n              name=\"description\"\n              value={description}\n              onChange={onChangeNewPostForm}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Youtube Tutorial URL\"\n              name=\"url\"\n              value={url}\n              onChange={onChangeNewPostForm}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              as=\"select\"\n              name=\"status\"\n              value={status}\n              onChange={onChangeNewPostForm}\n            >\n              <option value=\"TO LEARN\"> TO LEARN</option>\n              <option value=\"LEARNING\"> LEARNING</option>\n              <option value=\"LEARNED\"> LEARNED</option>\n            </Form.Control>\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeDialog}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" type=\"submit\">\n            Learnit\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default UpdatepostModal;\n",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":13,"column":9,"nodeType":"110","messageId":"111","endLine":13,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":36,"column":31,"nodeType":"114","endLine":36,"endColumn":33,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":44,"column":27,"nodeType":"118","messageId":"119","endLine":44,"endColumn":29},{"ruleId":"108","severity":1,"message":"120","line":2,"column":28,"nodeType":"110","messageId":"111","endLine":2,"endColumn":34},{"ruleId":"108","severity":1,"message":"121","line":22,"column":13,"nodeType":"110","messageId":"111","endLine":22,"endColumn":20},{"ruleId":"108","severity":1,"message":"121","line":29,"column":13,"nodeType":"110","messageId":"111","endLine":29,"endColumn":20},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["124"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'success' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [getPosts]",{"range":"127","text":"128"},[867,869],"[getPosts]"]