{"ast":null,"code":"var _jsxFileName = \"/home/thanh/Desktop/Trackerlist/client/src/contexts/Postcontext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { apiUrl, POSTS_LOADED_SUCCESS, POSTS_LOADED_FAIL, ADD_POST } from \"./constants\";\nimport { PostsReducer } from \"../reducers/PostsReducer\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostContext = /*#__PURE__*/createContext();\n\nconst PostcontextProvider = ({\n  children\n}) => {\n  _s();\n\n  //State\n  const [postState, dispatch] = useReducer(PostsReducer, {\n    posts: [],\n    postsLoading: true\n  });\n  const [showAddPostModal, SetshowAddPostModal] = useState(false);\n  const [showToast, SetshowToast] = useState(false); //GetAllPost\n\n  const getPosts = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/posts`);\n\n      if (response.data.success) {\n        dispatch({\n          type: POSTS_LOADED_SUCCESS,\n          payload: response.data.posts\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: POSTS_LOADED_FAIL\n      });\n    }\n  };\n\n  const addPost = async newPost => {\n    try {\n      const response = await axios.post(`${apiUrl}/posts`, newPost);\n\n      if (response.data.success) {\n        dispatch({\n          type: ADD_POST,\n          payload: response.data.post\n        });\n        return response.data;\n      }\n    } catch (error) {\n      return error.response.data ? error.reponse.data : {\n        success: false,\n        message: 'Server error'\n      };\n    }\n  }; //Take away\n\n\n  const PostContextData = {\n    postState,\n    getPosts,\n    showAddPostModal,\n    SetshowAddPostModal,\n    addPost\n  };\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: PostContextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostcontextProvider, \"QHAQww+YfT0C1mNCdrpdMFK78lM=\");\n\n_c = PostcontextProvider;\nexport default PostcontextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostcontextProvider\");","map":{"version":3,"sources":["/home/thanh/Desktop/Trackerlist/client/src/contexts/Postcontext.js"],"names":["createContext","useReducer","React","axios","apiUrl","POSTS_LOADED_SUCCESS","POSTS_LOADED_FAIL","ADD_POST","PostsReducer","useState","PostContext","PostcontextProvider","children","postState","dispatch","posts","postsLoading","showAddPostModal","SetshowAddPostModal","showToast","SetshowToast","getPosts","response","get","data","success","type","payload","error","addPost","newPost","post","reponse","message","PostContextData"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,oBAAjB,EAAuCC,iBAAvC,EAAyDC,QAAzD,QAAyE,aAAzE;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,MAAMC,WAAW,gBAAGV,aAAa,EAAjC;;AAEP,MAAMW,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C;AACA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBb,UAAU,CAACO,YAAD,EAAe;AACrDO,IAAAA,KAAK,EAAE,EAD8C;AAErDC,IAAAA,YAAY,EAAE;AAFuC,GAAf,CAAxC;AAIA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C,CAP4C,CAS5C;;AACA,QAAMY,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,GAAEnB,MAAO,QAApB,CAAvB;;AACA,UAAIkB,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzBX,QAAAA,QAAQ,CAAC;AAAEY,UAAAA,IAAI,EAAErB,oBAAR;AAA8BsB,UAAAA,OAAO,EAAEL,QAAQ,CAACE,IAAT,CAAcT;AAArD,SAAD,CAAR;AACD;AACF,KALD,CAKE,OAAOa,KAAP,EAAc;AACdd,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,IAAI,EAAEpB;AAAR,OAAD,CAAR;AACD;AACF,GATD;;AAWA,QAAMuB,OAAO,GAAG,MAAMC,OAAN,IAAgB;AAC9B,QAAI;AACF,YAAMR,QAAQ,GAAG,MAAMnB,KAAK,CAAC4B,IAAN,CAAY,GAAE3B,MAAO,QAArB,EAA6B0B,OAA7B,CAAvB;;AACA,UAAIR,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA0B;AACxBX,QAAAA,QAAQ,CAAC;AAACY,UAAAA,IAAI,EAACnB,QAAN;AAAeoB,UAAAA,OAAO,EAAEL,QAAQ,CAACE,IAAT,CAAcO;AAAtC,SAAD,CAAR;AACA,eAAOT,QAAQ,CAACE,IAAhB;AACD;AACF,KAND,CAME,OAAOI,KAAP,EAAc;AACd,aAAOA,KAAK,CAACN,QAAN,CAAeE,IAAf,GAAoBI,KAAK,CAACI,OAAN,CAAcR,IAAlC,GAAyC;AAACC,QAAAA,OAAO,EAAC,KAAT;AAAeQ,QAAAA,OAAO,EAAC;AAAvB,OAAhD;AACD;AACF,GAVD,CArB4C,CAgC5C;;;AACA,QAAMC,eAAe,GAAG;AACtBrB,IAAAA,SADsB;AAEtBQ,IAAAA,QAFsB;AAGtBJ,IAAAA,gBAHsB;AAItBC,IAAAA,mBAJsB;AAKtBW,IAAAA;AALsB,GAAxB;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,eAA7B;AAAA,cACGtB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9CD;;GAAMD,mB;;KAAAA,mB;AAgDN,eAAeA,mBAAf","sourcesContent":["import { createContext, useReducer } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { apiUrl, POSTS_LOADED_SUCCESS, POSTS_LOADED_FAIL,ADD_POST } from \"./constants\";\nimport { PostsReducer } from \"../reducers/PostsReducer\";\nimport { useState } from \"react\";\n\nexport const PostContext = createContext();\n\nconst PostcontextProvider = ({ children }) => {\n  //State\n  const [postState, dispatch] = useReducer(PostsReducer, {\n    posts: [],\n    postsLoading: true,\n  });\n  const [showAddPostModal, SetshowAddPostModal] = useState(false);\n  const [showToast, SetshowToast] = useState(false);\n  \n  //GetAllPost\n  const getPosts = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/posts`);\n      if (response.data.success) {\n        dispatch({ type: POSTS_LOADED_SUCCESS, payload: response.data.posts });\n      }\n    } catch (error) {\n      dispatch({ type: POSTS_LOADED_FAIL });\n    }\n  };\n\n  const addPost = async newPost =>{\n    try {\n      const response = await axios.post(`${apiUrl}/posts`,newPost)\n      if (response.data.success){\n        dispatch({type:ADD_POST,payload :response.data.post})\n        return response.data\n      }\n    } catch (error) {\n      return error.response.data?error.reponse.data : {success:false,message:'Server error'}\n    }\n  }\n  //Take away\n  const PostContextData = {\n    postState,\n    getPosts,\n    showAddPostModal,\n    SetshowAddPostModal,\n    addPost\n  };\n\n  return (\n    <PostContext.Provider value={PostContextData}>\n      {children}\n    </PostContext.Provider>\n  );\n};\n\nexport default PostcontextProvider;\n"]},"metadata":{},"sourceType":"module"}