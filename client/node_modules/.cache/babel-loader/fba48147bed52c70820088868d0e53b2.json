{"ast":null,"code":"import { POSTS_LOADED_FAIL, POSTS_LOADED_SUCCESS, ADD_POST, DELETE_POST, UPDATE_POST, FIND_POST } from \"../contexts/constants\";\nexport const PostsReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case POSTS_LOADED_SUCCESS:\n      return { ...state,\n        posts: payload,\n        postsLoading: false\n      };\n\n    case POSTS_LOADED_FAIL:\n      return { ...state,\n        posts: [],\n        postsLoading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [...state.posts, payload]\n      };\n\n    case DELETE_POST:\n      console.log(state);\n      return { ...state,\n        posts: state.posts.filter(x => x._id !== payload)\n      };\n\n    case UPDATE_POST:\n      const newPost = state.posts.map(post => {\n        if (post._id === payload._id) {\n          return payload;\n        } else return post;\n      });\n      return { ...state,\n        posts: newPost\n      };\n\n    case FIND_POST:\n      ;\n\n    default:\n      return state;\n  }\n};\n_c = PostsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsReducer\");","map":{"version":3,"sources":["/home/thanh/Desktop/Trackerlist/client/src/reducers/PostsReducer.js"],"names":["POSTS_LOADED_FAIL","POSTS_LOADED_SUCCESS","ADD_POST","DELETE_POST","UPDATE_POST","FIND_POST","PostsReducer","state","action","type","payload","posts","postsLoading","console","log","filter","x","_id","newPost","map","post"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,oBAA5B,EAAiDC,QAAjD,EAA2DC,WAA3D,EAAuEC,WAAvE,EAAmFC,SAAnF,QAAmG,uBAAnG;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKR,oBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELI,QAAAA,KAAK,EAAED,OAFF;AAGLE,QAAAA,YAAY,EAAE;AAHT,OAAP;;AAKF,SAAKZ,iBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELI,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,YAAY,EAAE;AAHT,OAAP;;AAKA,SAAKV,QAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELI,QAAAA,KAAK,EAAC,CAAC,GAAGJ,KAAK,CAACI,KAAV,EAAgBD,OAAhB;AAFD,OAAP;;AAIA,SAAKP,WAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACF,aAAO,EACL,GAAGA,KADE;AAELI,QAAAA,KAAK,EAACJ,KAAK,CAACI,KAAN,CAAYI,MAAZ,CAAmBC,CAAC,IAAEA,CAAC,CAACC,GAAF,KAAUP,OAAhC;AAFD,OAAP;;AAKA,SAAKN,WAAL;AACE,YAAMc,OAAO,GAAGX,KAAK,CAACI,KAAN,CAAYQ,GAAZ,CAAgBC,IAAI,IAAE;AACpC,YAAGA,IAAI,CAACH,GAAL,KAAWP,OAAO,CAACO,GAAtB,EAA0B;AACxB,iBAAOP,OAAP;AACD,SAFD,MAEM,OAAOU,IAAP;AACP,OAJe,CAAhB;AAKA,aAAO,EACL,GAAGb,KADE;AAELI,QAAAA,KAAK,EAACO;AAFD,OAAP;;AAKF,SAAKb,SAAL;AACE;;AACN;AACE,aAAOE,KAAP;AAvCJ;AAyCD,CA3CM;KAAMD,Y","sourcesContent":["import { POSTS_LOADED_FAIL, POSTS_LOADED_SUCCESS,ADD_POST, DELETE_POST,UPDATE_POST,FIND_POST} from \"../contexts/constants\";\n\nexport const PostsReducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case POSTS_LOADED_SUCCESS:\n      return {\n        ...state,\n        posts: payload,\n        postsLoading: false,\n      };\n    case POSTS_LOADED_FAIL:\n      return {\n        ...state,\n        posts: [],\n        postsLoading: false,\n      };\n      case ADD_POST:\n        return {\n          ...state,\n          posts:[...state.posts,payload]\n        }\n        case DELETE_POST:\n          console.log(state)\n        return {\n          ...state,\n          posts:state.posts.filter(x=>x._id !== payload)\n        }\n        ;\n        case UPDATE_POST:\n          const newPost = state.posts.map(post=>{\n            if(post._id===payload._id){\n              return payload\n            }else return post\n          })\n          return {\n            ...state,\n            posts:newPost\n          }\n        ;\n        case FIND_POST:\n          ;\n    default:\n      return state;\n  }\n};\n\n\n"]},"metadata":{},"sourceType":"module"}