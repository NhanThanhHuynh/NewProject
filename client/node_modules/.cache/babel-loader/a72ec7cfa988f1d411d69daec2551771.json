{"ast":null,"code":"var _jsxFileName = \"/home/thanh/Desktop/Trackerlist/client/src/components/posts/AddpostModal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useContext, useState } from \"react\";\nimport { PostContext } from '../../contexts/Postcontext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddpostModal = () => {\n  _s();\n\n  //Context\n  const {\n    SetshowAddPostModal,\n    showAddPostModal\n  } = useContext(PostContext);\n\n  const closeDialog = () => {\n    setnewPost({\n      title: '',\n      description: '',\n      url: '',\n      status: 'TO LEARN'\n    });\n    SetshowAddPostModal(false);\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    const {\n      success,\n      message\n    } = await addPost(newPost);\n  }; //State\n\n\n  const [newPost, setnewPost] = useState({\n    title: '',\n    description: '',\n    url: '',\n    status: 'TO LEARN'\n  });\n  const {\n    title,\n    description,\n    url\n  } = newPost;\n\n  const onChangeNewPostForm = e => setnewPost({ ...newPost,\n    [e.target.name]: e.target.value\n  });\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: showAddPostModal,\n    animation: false,\n    onHide: closeDialog,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"What do you want to learn ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Title\",\n            name: \"title\",\n            required: true,\n            \"aria-describedby\": \"title-help\",\n            value: title,\n            onChange: onChangeNewPostForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            id: \"title-help\",\n            muted: true,\n            children: \"Required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            placeholder: \"Description\",\n            row: 3,\n            name: \"description\",\n            value: description,\n            onChange: onChangeNewPostForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Youtube Tutorial URL\",\n            name: \"url\",\n            value: url,\n            onChange: onChangeNewPostForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Learnit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddpostModal, \"7RgeORY/EJD9XbmIAl0Wt8BQHhw=\");\n\n_c = AddpostModal;\nexport default AddpostModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddpostModal\");","map":{"version":3,"sources":["/home/thanh/Desktop/Trackerlist/client/src/components/posts/AddpostModal.js"],"names":["React","Modal","Button","Form","useContext","useState","PostContext","AddpostModal","SetshowAddPostModal","showAddPostModal","closeDialog","setnewPost","title","description","url","status","onSubmit","event","preventDefault","success","message","addPost","newPost","onChangeNewPostForm","e","target","name","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useContext,useState } from \"react\";\nimport {PostContext} from '../../contexts/Postcontext'\n\nconst AddpostModal = () => {\n  //Context\n  const {SetshowAddPostModal,showAddPostModal}=useContext(PostContext)\n  const closeDialog = ()=>{\n    setnewPost({\n      title:'',\n    description : '',\n    url :'',\n    status : 'TO LEARN'\n    })\n    SetshowAddPostModal(false)\n  }\n\n  const onSubmit = async event =>{\n    event.preventDefault()\n    const {success,message} = await addPost(newPost)\n  }  \n  //State\n  const [newPost,setnewPost] = useState({\n    title:'',\n    description : '',\n    url :'',\n    status : 'TO LEARN'\n  })\n  const {title,description,url} =newPost\n\n  const onChangeNewPostForm = e =>setnewPost({\n    ...newPost,\n    [e.target.name] : e.target.value\n  })\n\n  return (\n    <Modal show={showAddPostModal} animation ={false} onHide={closeDialog} >\n      <Modal.Header closeButton>\n        <Modal.Title>What do you want to learn ?</Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Title\"\n              name=\"title\"\n              required\n              aria-describedby=\"title-help\"\n              value = {title}\n              onChange= {onChangeNewPostForm}\n            />\n            <Form.Text id=\"title-help\" muted>\n              Required\n            </Form.Text>\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              as=\"textarea\"\n              placeholder=\"Description\"\n              row={3}\n              name=\"description\"\n              value = {description}\n              onChange= {onChangeNewPostForm}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Youtube Tutorial URL\"\n              name=\"url\"\n              value = {url}\n              onChange= {onChangeNewPostForm}\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeDialog}>Cancel</Button>\n          <Button variant=\"primary\" type=\"submit\">\n            Learnit\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AddpostModal;\n"]},"metadata":{},"sourceType":"module"}