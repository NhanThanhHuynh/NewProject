{"ast":null,"code":"var _jsxFileName = \"/home/thanh/Desktop/Trackerlist/client/src/contexts/Postcontext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport React from 'react';\nimport axios from 'axios';\nimport { apiUrl } from './constants';\nimport PostsRecuder from '../reducers/PostsReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostContext = /*#__PURE__*/createContext();\n\nconst PostcontextProvider = ({\n  children\n}) => {\n  _s();\n\n  //State\n  const [postState, dispatch] = useReducer({\n    posts: [],\n    postsLoading: true\n  }); //GetAllPost\n\n  const getPosts = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/posts`);\n\n      if (response.data.success) {\n        dispatch({\n          type: 'POSTS_LOADED_SUCCESS',\n          payload: response.data.posts\n        });\n      }\n    } catch (error) {\n      return error.response.data ? error.reponse.data : {\n        success: false,\n        message: 'Server error'\n      };\n    }\n  };\n\n  const PostContextData = {\n    postState,\n    getPosts\n  };\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: PostContextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostcontextProvider, \"YswlWkWFT1tHI4HFxPvaNnIWvaw=\");\n\n_c = PostcontextProvider;\nexport default PostcontextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostcontextProvider\");","map":{"version":3,"sources":["/home/thanh/Desktop/Trackerlist/client/src/contexts/Postcontext.js"],"names":["createContext","useReducer","React","axios","apiUrl","PostsRecuder","PostContext","PostcontextProvider","children","postState","dispatch","posts","postsLoading","getPosts","response","get","data","success","type","payload","error","reponse","message","PostContextData"],"mappings":";;;AAAA,SAASA,aAAT,EAAuBC,UAAvB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,aAArB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;AAEA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,EAAjC;;AAEP,MAAMO,mBAAmB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAExC;AACA,QAAM,CAACC,SAAD,EAAWC,QAAX,IAAuBT,UAAU,CAAC;AACpCU,IAAAA,KAAK,EAAC,EAD8B;AAEpCC,IAAAA,YAAY,EAAC;AAFuB,GAAD,CAAvC,CAHwC,CAQxC;;AACA,QAAMC,QAAQ,GAAC,YAAU;AACrB,QAAI;AACA,YAAMC,QAAQ,GAAI,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEX,MAAO,QAApB,CAAxB;;AACA,UAAGU,QAAQ,CAACE,IAAT,CAAcC,OAAjB,EAAyB;AACrBP,QAAAA,QAAQ,CAAC;AAACQ,UAAAA,IAAI,EAAC,sBAAN;AAA6BC,UAAAA,OAAO,EAACL,QAAQ,CAACE,IAAT,CAAcL;AAAnD,SAAD,CAAR;AACH;AACJ,KALD,CAKE,OAAOS,KAAP,EAAc;AACZ,aAAOA,KAAK,CAACN,QAAN,CAAeE,IAAf,GAAqBI,KAAK,CAACC,OAAN,CAAcL,IAAnC,GAA0C;AAACC,QAAAA,OAAO,EAAC,KAAT;AAAgBK,QAAAA,OAAO,EAAC;AAAxB,OAAjD;AACH;AACJ,GATD;;AAWA,QAAMC,eAAe,GAAG;AAACd,IAAAA,SAAD;AAAWI,IAAAA;AAAX,GAAxB;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAIU,eAA/B;AAAA,cACKf;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA3BD;;GAAMD,mB;;KAAAA,mB;AA6BN,eAAeA,mBAAf","sourcesContent":["import { createContext,useReducer } from \"react\";\nimport React from 'react'\nimport axios from 'axios'\nimport {apiUrl} from './constants'\nimport PostsRecuder from '../reducers/PostsReducer'\n\nexport const PostContext = createContext()\n\nconst PostcontextProvider = ({children}) => {\n    \n    //State\n    const [postState,dispatch] = useReducer({\n        posts:[],\n        postsLoading:true\n    })\n\n    //GetAllPost\n    const getPosts=async() =>{\n        try {\n            const response =  await axios.get(`${apiUrl}/posts`)\n            if(response.data.success){\n                dispatch({type:'POSTS_LOADED_SUCCESS',payload:response.data.posts})\n            }\n        } catch (error) {\n            return error.response.data? error.reponse.data : {success:false, message:'Server error'}\n        }\n    }\n\n    const PostContextData = {postState,getPosts}\n\n    return (\n        <PostContext.Provider value = {PostContextData}>\n            {children}\n        </PostContext.Provider>\n    )\n}\n\nexport default PostcontextProvider\n"]},"metadata":{},"sourceType":"module"}