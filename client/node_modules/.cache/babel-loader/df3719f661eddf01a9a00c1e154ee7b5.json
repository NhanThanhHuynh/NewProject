{"ast":null,"code":"var _jsxFileName = \"/home/thanh/Desktop/Trackerlist/client/src/components/Auth/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useState } from 'react';\nimport { AuthContext } from \"../../contexts/index\";\nimport Alertmessage from \"../Layout/Alertmessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  //Context\n  const {\n    registerUser\n  } = useContext(AuthContext); //Use history\n\n  const history = useHistory();\n  const [registerForm, setRegisterForm] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: ''\n  });\n  const [alert, setAlert] = useState(null);\n  const {\n    username,\n    password,\n    confirmPassword\n  } = registerForm;\n\n  const OnchangeRegisterForm = e => setRegisterForm({ ...registerForm,\n    [e.target.name]: e.target.value\n  });\n\n  const register = async e => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setAlert({\n        type: 'danger',\n        message: 'Password do not match'\n      });\n      setTimeout(() => setAlert(null), 5000);\n      return;\n    }\n\n    try {\n      const registerData = await registerUser(registerForm);\n\n      if (!registerData.success) {\n        setAlert({\n          type: \"danger\",\n          messsage: registerData.message\n        });\n        setTimeout(() => setAlert(null), 5000);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Username\",\n          name: \"username\",\n          required: true,\n          value: username,\n          onChange: OnchangeRegisterForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"my-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          required: true,\n          value: password,\n          onChange: OnchangeRegisterForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"my-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Confirm password\",\n          name: \"confirmPassword\",\n          required: true,\n          value: confirmPassword,\n          onChange: OnchangeRegisterForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have account ?\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Login\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          size: \"sm\",\n          className: \"ml-2\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Register, \"nTeIB2y9+42+xqMrxNQj939duac=\", true);\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/thanh/Desktop/Trackerlist/client/src/components/Auth/RegisterForm.js"],"names":["React","Form","Button","Link","useContext","useState","AuthContext","Alertmessage","Register","registerUser","history","useHistory","registerForm","setRegisterForm","username","password","confirmPassword","alert","setAlert","OnchangeRegisterForm","e","target","name","value","register","preventDefault","type","message","setTimeout","registerData","success","messsage","error","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport {useContext,useState} from 'react'\nimport { AuthContext } from \"../../contexts/index\";\nimport Alertmessage from \"../Layout/Alertmessage\";\n\nexport default function Register() {\n  //Context\n  const { registerUser } = useContext(AuthContext);\n\n  //Use history\n  const history = useHistory();\n\n  const [registerForm, setRegisterForm] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword : ''\n  });\n\n  const [alert, setAlert] = useState(null);\n  const { username, password,confirmPassword } = registerForm;\n\n  const OnchangeRegisterForm = (e) =>\n    setRegisterForm({\n      ...registerForm,\n      [e.target.name]: e.target.value,\n    });\n\n  const register = async (e) => {\n    e.preventDefault();\n    if(password !=confirmPassword){\n      setAlert({type:'danger',message:'Password do not match'})\n      setTimeout(()=>setAlert(null),5000)\n      return\n    }\n    \n    try {\n      const registerData = await registerUser(registerForm);\n      if (!registerData.success){\n        setAlert({ type: \"danger\", messsage: registerData.message })\n        setTimeout(()=>setAlert(null),5000)\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <Form className=\"my-4\">\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            required\n            value = {username}\n            onChange= {OnchangeRegisterForm}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"my-3\">\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            required\n            value = {password}\n            onChange= {OnchangeRegisterForm}\n          />\n        </Form.Group>\n        <Form.Group className=\"my-3\">\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            name=\"confirmPassword\"\n            required\n            value = {confirmPassword}\n            onChange= {OnchangeRegisterForm}\n          />\n        </Form.Group>\n        <Button variant=\"success\" type=\"submit\">\n          Register\n        </Button>\n      </Form>\n      <p>\n        Already have account ?\n        <Link to=\"/Login\">\n          <Button variant=\"info\" size=\"sm\" className=\"ml-2\">\n            Login\n          </Button>\n        </Link>\n      </p>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}