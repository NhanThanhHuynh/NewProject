{"ast":null,"code":"var _jsxFileName = \"/home/thanh/Desktop/Trackerlist/client/src/contexts/index.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { authReducer } from \"../reducers/Authreducer\";\nimport axios from 'axios';\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\nconst AuthContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [authState, dispatch] = useReducer(authReducer, {\n    authLoading: true,\n    isAuthticated: false,\n    user: null\n  }); //Login\n\n  const loginUser = async userForm => {\n    try {\n      const response = await axios.post(`${apiUrl}/auth/login`, userForm);\n      if (response.data.success) return response.data;\n    } catch (error) {\n      if (error.response.data) return error.response.data;else return {\n        success: false,\n        messsage: error.messsage\n      };\n    }\n  }; //context data\n\n\n  const authContextData = {\n    loginUser\n  }; //return provider\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"Km62UIcssIwCAAH6lUSPsgfV3ug=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/thanh/Desktop/Trackerlist/client/src/contexts/index.js"],"names":["createContext","useReducer","authReducer","axios","apiUrl","LOCAL_STORAGE_TOKEN_NAME","AuthContext","AuthContextProvider","children","authState","dispatch","authLoading","isAuthticated","user","loginUser","userForm","response","post","data","success","error","messsage","authContextData"],"mappings":";;;AAAA,SAASA,aAAT,EAAuBC,UAAvB,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAeC,wBAAf,QAA8C,aAA9C;;AAEA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,EAAjC;;AAEP,MAAMO,mBAAmB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAWC,QAAX,IAAuBT,UAAU,CAACC,WAAD,EAAa;AAChDS,IAAAA,WAAW,EAAE,IADmC;AAEhDC,IAAAA,aAAa,EAAG,KAFgC;AAGhDC,IAAAA,IAAI,EAAC;AAH2C,GAAb,CAAvC,CADuC,CAMvC;;AACA,QAAMC,SAAS,GAAG,MAAMC,QAAN,IAAiB;AAC/B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAN,CAAY,GAAEb,MAAO,aAArB,EAAkCW,QAAlC,CAAvB;AACA,UAAGC,QAAQ,CAACE,IAAT,CAAcC,OAAjB,EAEA,OAAOH,QAAQ,CAACE,IAAhB;AACH,KALD,CAKE,OAAOE,KAAP,EAAc;AACZ,UAAGA,KAAK,CAACJ,QAAN,CAAeE,IAAlB,EAAwB,OAAOE,KAAK,CAACJ,QAAN,CAAeE,IAAtB,CAAxB,KACK,OAAO;AAACC,QAAAA,OAAO,EAAG,KAAX;AAAkBE,QAAAA,QAAQ,EAAGD,KAAK,CAACC;AAAnC,OAAP;AACR;AACJ,GAVD,CAPuC,CAkBvC;;;AACA,QAAMC,eAAe,GAAC;AAACR,IAAAA;AAAD,GAAtB,CAnBuC,CAoBvC;;AACA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAIQ,eAA/B;AAAA,cACKd;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1BD;;GAAMD,mB;;KAAAA,mB;AA4BN,eAAeA,mBAAf","sourcesContent":["import { createContext,useReducer } from \"react\";\nimport { authReducer } from \"../reducers/Authreducer\";\nimport axios from 'axios'\nimport {apiUrl,LOCAL_STORAGE_TOKEN_NAME} from './constants'\n\nexport const AuthContext = createContext()\n\nconst AuthContextProvider = ({children}) =>{\n    const [authState,dispatch] = useReducer(authReducer,{\n        authLoading: true,\n        isAuthticated : false,\n        user:null\n    })\n    //Login\n    const loginUser = async userForm =>{\n        try {\n            const response = await axios.post(`${apiUrl}/auth/login`,userForm)\n            if(response.data.success)\n\n            return response.data\n        } catch (error) {\n            if(error.response.data) return error.response.data\n            else return {success : false, messsage : error.messsage}\n        }\n    }\n    //context data\n    const authContextData={loginUser}\n    //return provider\n    return (\n        <AuthContext.Provider value = {authContextData}>\n            {children}\n        </AuthContext.Provider>\n    )\n}   \n\nexport default AuthContextProvider;"]},"metadata":{},"sourceType":"module"}