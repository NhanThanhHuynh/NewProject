{"ast":null,"code":"var _jsxFileName = \"/home/thanh/Desktop/Trackerlist/client/src/contexts/Postcontext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { apiUrl, POSTS_LOADED_SUCCESS, POSTS_LOADED_FAIL } from \"./constants\";\nimport { PostsReducer } from \"../reducers/PostsReducer\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostContext = /*#__PURE__*/createContext();\n\nconst PostcontextProvider = ({\n  children\n}) => {\n  _s();\n\n  //State\n  const [postState, dispatch] = useReducer(PostsReducer, {\n    posts: [],\n    postsLoading: true\n  });\n  const [showAddPostModal, SetshowAddPostModal] = useState(false); //GetAllPost\n\n  const getPosts = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/posts`);\n\n      if (response.data.success) {\n        dispatch({\n          type: POSTS_LOADED_SUCCESS,\n          payload: response.data.posts\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: POSTS_LOADED_FAIL\n      });\n    }\n  };\n\n  const addPost = async newPost => {\n    try {\n      const response = await axios.post(`${apiUrl}`);\n    } catch (error) {}\n  }; //Take away\n\n\n  const PostContextData = {\n    postState,\n    getPosts,\n    showAddPostModal,\n    SetshowAddPostModal\n  };\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: PostContextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostcontextProvider, \"xnEEd17fhrvfZOKkZSdmV6yJQig=\");\n\n_c = PostcontextProvider;\nexport default PostcontextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostcontextProvider\");","map":{"version":3,"sources":["/home/thanh/Desktop/Trackerlist/client/src/contexts/Postcontext.js"],"names":["createContext","useReducer","React","axios","apiUrl","POSTS_LOADED_SUCCESS","POSTS_LOADED_FAIL","PostsReducer","useState","PostContext","PostcontextProvider","children","postState","dispatch","posts","postsLoading","showAddPostModal","SetshowAddPostModal","getPosts","response","get","data","success","type","payload","error","addPost","newPost","post","PostContextData"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,oBAAjB,EAAuCC,iBAAvC,QAAgE,aAAhE;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,MAAMC,WAAW,gBAAGT,aAAa,EAAjC;;AAEP,MAAMU,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C;AACA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBZ,UAAU,CAACM,YAAD,EAAe;AACrDO,IAAAA,KAAK,EAAE,EAD8C;AAErDC,IAAAA,YAAY,EAAE;AAFuC,GAAf,CAAxC;AAIA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,KAAD,CAAxD,CAN4C,CAQ5C;;AACA,QAAMU,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEhB,MAAO,QAApB,CAAvB;;AACA,UAAIe,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzBT,QAAAA,QAAQ,CAAC;AAAEU,UAAAA,IAAI,EAAElB,oBAAR;AAA8BmB,UAAAA,OAAO,EAAEL,QAAQ,CAACE,IAAT,CAAcP;AAArD,SAAD,CAAR;AACD;AACF,KALD,CAKE,OAAOW,KAAP,EAAc;AACdZ,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAEjB;AAAR,OAAD,CAAR;AACD;AACF,GATD;;AAWA,QAAMoB,OAAO,GAAG,MAAMC,OAAN,IAAgB;AAC9B,QAAI;AACF,YAAMR,QAAQ,GAAG,MAAMhB,KAAK,CAACyB,IAAN,CAAY,GAAExB,MAAO,EAArB,CAAvB;AACD,KAFD,CAEE,OAAOqB,KAAP,EAAc,CAEf;AACF,GAND,CApB4C,CA2B5C;;;AACA,QAAMI,eAAe,GAAG;AACtBjB,IAAAA,SADsB;AAEtBM,IAAAA,QAFsB;AAGtBF,IAAAA,gBAHsB;AAItBC,IAAAA;AAJsB,GAAxB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEY,eAA7B;AAAA,cACGlB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCD;;GAAMD,mB;;KAAAA,mB;AA0CN,eAAeA,mBAAf","sourcesContent":["import { createContext, useReducer } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { apiUrl, POSTS_LOADED_SUCCESS, POSTS_LOADED_FAIL } from \"./constants\";\nimport { PostsReducer } from \"../reducers/PostsReducer\";\nimport { useState } from \"react\";\n\nexport const PostContext = createContext();\n\nconst PostcontextProvider = ({ children }) => {\n  //State\n  const [postState, dispatch] = useReducer(PostsReducer, {\n    posts: [],\n    postsLoading: true,\n  });\n  const [showAddPostModal, SetshowAddPostModal] = useState(false);\n  \n  //GetAllPost\n  const getPosts = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/posts`);\n      if (response.data.success) {\n        dispatch({ type: POSTS_LOADED_SUCCESS, payload: response.data.posts });\n      }\n    } catch (error) {\n      dispatch({ type: POSTS_LOADED_FAIL });\n    }\n  };\n\n  const addPost = async newPost =>{\n    try {\n      const response = await axios.post(`${apiUrl}`)\n    } catch (error) {\n      \n    }\n  }\n  //Take away\n  const PostContextData = {\n    postState,\n    getPosts,\n    showAddPostModal,\n    SetshowAddPostModal,\n  };\n\n  return (\n    <PostContext.Provider value={PostContextData}>\n      {children}\n    </PostContext.Provider>\n  );\n};\n\nexport default PostcontextProvider;\n"]},"metadata":{},"sourceType":"module"}