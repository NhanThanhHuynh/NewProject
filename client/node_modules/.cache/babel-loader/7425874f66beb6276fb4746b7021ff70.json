{"ast":null,"code":"var _jsxFileName = \"/home/thanh/Desktop/Trackerlist/client/src/components/routes/Protectedroutes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../contexts\";\nimport { Route, Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Protectedroutes = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    authState: {\n      authLoading,\n      isAuthticated\n    }\n  } = useContext(AuthContext);\n\n  if (authLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center mt-2\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          variant: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuthticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Component, { ...rest,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Protectedroutes, \"j621bdYypHhIMjRX8cJ4OO0A/VM=\");\n\n_c = Protectedroutes;\nexport default Protectedroutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Protectedroutes\");","map":{"version":3,"sources":["/home/thanh/Desktop/Trackerlist/client/src/components/routes/Protectedroutes.js"],"names":["React","Spinner","useContext","AuthContext","Route","Redirect","Protectedroutes","component","Component","rest","authState","authLoading","isAuthticated","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC7D,QAAM;AACJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf;AADP,MAEFV,UAAU,CAACC,WAAD,CAFd;;AAGA,MAAIQ,WAAJ,EAAiB;AACf,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,oCAAf;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAOD;;AACD,sBACE,QAAC,KAAD,OACMF,IADN;AAEE,IAAA,MAAM,EAAGI,KAAD,IACND,aAAa,gBACX;AAAA,6BACE,QAAC,SAAD,OAAeH,IAAf;AAAA,WAAyBI;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF,qBADW,gBAKX,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3BD;;GAAMP,e;;KAAAA,e;AA6BN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../contexts\";\nimport { Route, Redirect } from \"react-router\";\n\nconst Protectedroutes = ({ component: Component, ...rest }) => {\n  const {\n    authState: { authLoading, isAuthticated },\n  } = useContext(AuthContext);\n  if (authLoading) {\n    return (\n      <>\n        <div className=\"d-flex justify-content-center mt-2\">\n          <Spinner animation=\"border\" variant=\"info\" />\n        </div>\n      </>\n    );\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuthticated ? (\n          <>\n            <Component {...rest} {...props} />\n          </>\n        ) : (\n          <Redirect to=\"/Login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default Protectedroutes;\n"]},"metadata":{},"sourceType":"module"}