{"ast":null,"code":"var _jsxFileName = \"/home/thanh/Desktop/Trackerlist/client/src/components/views/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { PostContext } from \"../../contexts/Postcontext\";\nimport { useContext, useEffect } from \"react\";\nimport { Spinner, Card, Button, Row, Col, OverlayTrigger, Tooltip, Toast } from \"react-bootstrap\";\nimport { AuthContext } from \"../../contexts/index\";\nimport SinglePost from \"../posts/SinglePost\";\nimport AddpostModal from \"../posts/AddpostModal\";\nimport AddIcon from \"../../assets/plus-circle-fill.svg\";\nimport UpdatepostModal from '../posts/UpdatepostModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    authState: {\n      user: {\n        username\n      }\n    }\n  } = useContext(AuthContext);\n  const {\n    postState: {\n      posts,\n      postsLoading,\n      post\n    },\n    getPosts,\n    SetshowAddPostModal,\n    showToast: {\n      show,\n      message,\n      type\n    },\n    SetshowToast\n  } = useContext(PostContext); //Start : Get all posts\n\n  useEffect(() => getPosts(), []);\n  let body = null;\n\n  if (postsLoading) {\n    body = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-container\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        variant: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  } else if (posts.length == 0) {\n    body = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"text-center mx-5 my-5\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          as: \"h1\",\n          children: [\"Hi \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Welcome to my website\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"Click the button below to track your first skill to learn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: SetshowAddPostModal.bind(this, true),\n            children: \"Learn It\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    body = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"row-cols-1 row-cols-md-3 g-4 mx-auto mt-3\",\n        children: posts.map(post => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            className: \"my-2\",\n            children: /*#__PURE__*/_jsxDEV(SinglePost, {\n              post: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-floating\",\n        onClick: SetshowAddPostModal.bind(this, true),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: AddIcon,\n          alt: \"Addicon\",\n          width: \"60\",\n          height: \"60\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [body, /*#__PURE__*/_jsxDEV(AddpostModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), post !== null && /*#__PURE__*/_jsxDEV(UpdatepostModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      show: show,\n      style: {\n        position: \"fiexed\",\n        top: \"20%\",\n        right: \"10px\"\n      },\n      className: `bg-${type} text-white f`,\n      onClose: SetshowToast.bind(this, {\n        show: false,\n        message: '',\n        type: null\n      }),\n      delay: 3000,\n      autohide: true,\n      animation: false,\n      children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\" \", message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"Bhwogg46OBp4l+nadRydsR3KnQg=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/thanh/Desktop/Trackerlist/client/src/components/views/Dashboard.js"],"names":["React","PostContext","useContext","useEffect","Spinner","Card","Button","Row","Col","OverlayTrigger","Tooltip","Toast","AuthContext","SinglePost","AddpostModal","UpdatepostModal","Dashboard","authState","user","username","postState","posts","postsLoading","post","getPosts","SetshowAddPostModal","showToast","show","message","type","SetshowToast","body","length","bind","map","_id","AddIcon","position","top","right"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { PostContext } from \"../../contexts/Postcontext\";\nimport { useContext, useEffect } from \"react\";\nimport {\n  Spinner,\n  Card,\n  Button,\n  Row,\n  Col,\n  OverlayTrigger,\n  Tooltip,\n  Toast,\n} from \"react-bootstrap\";\nimport { AuthContext } from \"../../contexts/index\";\nimport SinglePost from \"../posts/SinglePost\";\nimport AddpostModal from \"../posts/AddpostModal\";\nimport AddIcon from \"../../assets/plus-circle-fill.svg\";\nimport UpdatepostModal from '../posts/UpdatepostModal'\n\nconst Dashboard = () => {\n  const {\n    authState: {\n      user: { username },\n    },\n  } = useContext(AuthContext);\n\n  const {\n    postState: { posts, postsLoading,post },\n    getPosts,\n    SetshowAddPostModal,\n    showToast: { show, message, type },\n    SetshowToast,\n  } = useContext(PostContext);\n\n  //Start : Get all posts\n  useEffect(() => getPosts(), []);\n  let body = null;\n  if (postsLoading) {\n    body = (\n      <div className=\"spinner-container\">\n        <Spinner animation=\"border\" role=\"status\" variant=\"info\" />\n      </div>\n    );\n  } else if (posts.length == 0) {\n    body = (\n      <>\n        <Card className=\"text-center mx-5 my-5\">\n          <Card.Header as=\"h1\">Hi {username}</Card.Header>\n          <Card.Body>\n            <Card.Title>Welcome to my website</Card.Title>\n            <Card.Text>\n              Click the button below to track your first skill to learn\n            </Card.Text>\n            <Button variant=\"primary\" onClick={SetshowAddPostModal.bind(this,true)}>Learn It</Button>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  } else {\n    body = (\n      <>\n        <Row className=\"row-cols-1 row-cols-md-3 g-4 mx-auto mt-3\">\n          {posts.map((post) => {\n            return (\n              <Col key={post._id} className=\"my-2\">\n                <SinglePost post={post} />\n              </Col>\n            );\n          })}\n        </Row>\n\n        {/* Open Add Post Modal */}\n        {/* <OverlayTrigger placement='left' overlay={<Tooltip>Add a new thing to learn</Tooltip>}> */}\n        <Button\n          className=\"btn-floating\"\n          onClick={SetshowAddPostModal.bind(this, true)}\n        >\n          <img src={AddIcon} alt=\"Addicon\" width=\"60\" height=\"60\" />\n        </Button>\n        {/* </OverlayTrigger> */}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {body}\n      <AddpostModal />\n      {post !==null && <UpdatepostModal/>}\n      {/* After post is added ,show toast */}\n      <Toast\n        show={show}\n        style={{ position: \"fiexed\", top: \"20%\", right: \"10px\" }}\n        className={`bg-${type} text-white f`}\n        onClose={SetshowToast.bind(this,{show:false,message:'',type:null})}\n        delay={3000}\n        autohide\n        animation = {false}\n      >\n        <Toast.Body>\n          <strong> {message} </strong>\n        </Toast.Body>\n      </Toast>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}