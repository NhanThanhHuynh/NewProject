{"ast":null,"code":"var _jsxFileName = \"/home/thanh/Desktop/Trackerlist/client/src/contexts/index.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { authReducer } from \"../reducers/Authreducer\";\nimport axios from \"axios\";\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"./constants\";\nimport setAuthtoken from './../utils/setAuthtoken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\nconst AuthContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [authState, dispatch] = useReducer(authReducer, {\n    authLoading: true,\n    isAuthticated: false,\n    user: null\n  }); //Auth user\n\n  const loadUser = async () => {\n    if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) {\n      setAuthtoken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n    }\n\n    try {} catch (error) {}\n  }; //Login\n\n\n  const loginUser = async userForm => {\n    try {\n      const response = await axios.post(`${apiUrl}/auth/login`, userForm);\n\n      if (response.data.success) {\n        localStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, response.data.accessToken);\n      }\n\n      return response.data;\n    } catch (error) {\n      if (error.response.data) return error.response.data;else return {\n        success: false,\n        messsage: error.messsage\n      };\n    }\n  }; //context data\n\n\n  const authContextData = {\n    loginUser\n  }; //return provider\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"r9jC2CQXukOFwfsd0mhvsEwAiQ4=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/thanh/Desktop/Trackerlist/client/src/contexts/index.js"],"names":["createContext","useReducer","authReducer","axios","apiUrl","LOCAL_STORAGE_TOKEN_NAME","setAuthtoken","AuthContext","AuthContextProvider","children","authState","dispatch","authLoading","isAuthticated","user","loadUser","localStorage","error","loginUser","userForm","response","post","data","success","setItem","accessToken","messsage","authContextData"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,wBAAjB,QAAiD,aAAjD;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,EAAjC;;AAEP,MAAMQ,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBV,UAAU,CAACC,WAAD,EAAc;AACpDU,IAAAA,WAAW,EAAE,IADuC;AAEpDC,IAAAA,aAAa,EAAE,KAFqC;AAGpDC,IAAAA,IAAI,EAAE;AAH8C,GAAd,CAAxC,CAD4C,CAO5C;;AACA,QAAMC,QAAQ,GAAG,YAAU;AACzB,QAAIC,YAAY,CAACX,wBAAD,CAAhB,EAA2C;AACzCC,MAAAA,YAAY,CAACU,YAAY,CAACX,wBAAD,CAAb,CAAZ;AACD;;AACD,QAAI,CAEH,CAFD,CAEE,OAAOY,KAAP,EAAc,CAEf;AACF,GATD,CAR4C,CAmB5C;;;AACA,QAAMC,SAAS,GAAG,MAAOC,QAAP,IAAoB;AACpC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAY,GAAEjB,MAAO,aAArB,EAAkCe,QAAlC,CAAvB;;AACA,UAAIC,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzBP,QAAAA,YAAY,CAACQ,OAAb,CACEnB,wBADF,EAEEe,QAAQ,CAACE,IAAT,CAAcG,WAFhB;AAID;;AACD,aAAOL,QAAQ,CAACE,IAAhB;AACD,KATD,CASE,OAAOL,KAAP,EAAc;AACd,UAAIA,KAAK,CAACG,QAAN,CAAeE,IAAnB,EAAyB,OAAOL,KAAK,CAACG,QAAN,CAAeE,IAAtB,CAAzB,KACK,OAAO;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBG,QAAAA,QAAQ,EAAET,KAAK,CAACS;AAAlC,OAAP;AACN;AACF,GAdD,CApB4C,CAmC5C;;;AACA,QAAMC,eAAe,GAAG;AAAET,IAAAA;AAAF,GAAxB,CApC4C,CAqC5C;;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAES,eAA7B;AAAA,cACGlB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3CD;;GAAMD,mB;;KAAAA,mB;AA6CN,eAAeA,mBAAf","sourcesContent":["import { createContext, useReducer } from \"react\";\nimport { authReducer } from \"../reducers/Authreducer\";\nimport axios from \"axios\";\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"./constants\";\nimport setAuthtoken from './../utils/setAuthtoken'\n\nexport const AuthContext = createContext();\n\nconst AuthContextProvider = ({ children }) => {\n  const [authState, dispatch] = useReducer(authReducer, {\n    authLoading: true,\n    isAuthticated: false,\n    user: null,\n  });\n\n  //Auth user\n  const loadUser = async ()=>{\n    if (localStorage[LOCAL_STORAGE_TOKEN_NAME]){\n      setAuthtoken(localStorage[LOCAL_STORAGE_TOKEN_NAME])\n    }\n    try {\n     \n    } catch (error) {\n      \n    }\n  }\n\n  //Login\n  const loginUser = async (userForm) => {\n    try {\n      const response = await axios.post(`${apiUrl}/auth/login`,userForm);\n      if (response.data.success) {\n        localStorage.setItem(\n          LOCAL_STORAGE_TOKEN_NAME,\n          response.data.accessToken\n        );\n      }\n      return response.data;\n    } catch (error) {\n      if (error.response.data) return error.response.data;\n      else return { success: false, messsage: error.messsage };\n    }\n  };\n  //context data\n  const authContextData = { loginUser };\n  //return provider\n  return (\n    <AuthContext.Provider value={authContextData}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;\n"]},"metadata":{},"sourceType":"module"}