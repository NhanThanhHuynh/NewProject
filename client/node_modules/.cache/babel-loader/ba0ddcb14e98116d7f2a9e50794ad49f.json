{"ast":null,"code":"var _jsxFileName = \"/home/thanh/Desktop/Trackerlist/client/src/contexts/Postcontext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { apiUrl, POSTS_LOADED_SUCCESS, POSTS_LOADED_FAIL, ADD_POST, DELETE_POST } from \"./constants\";\nimport { PostsReducer } from \"../reducers/PostsReducer\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostContext = /*#__PURE__*/createContext();\n\nconst PostcontextProvider = ({\n  children\n}) => {\n  _s();\n\n  //State\n  const [postState, dispatch] = useReducer(PostsReducer, {\n    posts: [],\n    postsLoading: true\n  });\n  const [showAddPostModal, SetshowAddPostModal] = useState(false);\n  const [showToast, SetshowToast] = useState({\n    show: false,\n    message: '',\n    type: null\n  }); //GetAllPost\n\n  const getPosts = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/posts`);\n\n      if (response.data.success) {\n        dispatch({\n          type: POSTS_LOADED_SUCCESS,\n          payload: response.data.posts\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: POSTS_LOADED_FAIL\n      });\n    }\n  }; //Add Post\n\n\n  const addPost = async newPost => {\n    try {\n      const response = await axios.post(`${apiUrl}/posts`, newPost);\n\n      if (response.data.success) {\n        dispatch({\n          type: ADD_POST,\n          payload: response.data.post\n        });\n        return response.data;\n      }\n    } catch (error) {\n      return error.response.data ? error.reponse.data : {\n        success: false,\n        message: 'Server error'\n      };\n    }\n  }; //Delete Post\n\n\n  const deletePost = async PostID => {\n    try {\n      const response = await axios.delete(`${apiUrl}/posts/${PostID}`);\n\n      if (response.data.success) {\n        dispatch({\n          type: DELETE_POST,\n          payload: PostID\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Update Post\n\n\n  const updatePost = async; //Take away\n\n  const PostContextData = {\n    postState,\n    getPosts,\n    showAddPostModal,\n    SetshowAddPostModal,\n    addPost,\n    showToast,\n    SetshowToast,\n    deletePost\n  };\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: PostContextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostcontextProvider, \"YLkIPdUmE3lIrTFQphRzCRHSGaU=\");\n\n_c = PostcontextProvider;\nexport default PostcontextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostcontextProvider\");","map":{"version":3,"sources":["/home/thanh/Desktop/Trackerlist/client/src/contexts/Postcontext.js"],"names":["createContext","useReducer","React","axios","apiUrl","POSTS_LOADED_SUCCESS","POSTS_LOADED_FAIL","ADD_POST","DELETE_POST","PostsReducer","useState","PostContext","PostcontextProvider","children","postState","dispatch","posts","postsLoading","showAddPostModal","SetshowAddPostModal","showToast","SetshowToast","show","message","type","getPosts","response","get","data","success","payload","error","addPost","newPost","post","reponse","deletePost","PostID","delete","console","log","updatePost","async","PostContextData"],"mappings":"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","sourcesContent":["import { createContext, useReducer } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { apiUrl, POSTS_LOADED_SUCCESS, POSTS_LOADED_FAIL,ADD_POST,DELETE_POST } from \"./constants\";\nimport { PostsReducer } from \"../reducers/PostsReducer\";\nimport { useState } from \"react\";\n\nexport const PostContext = createContext();\n\nconst PostcontextProvider = ({ children }) => {\n  //State\n  const [postState, dispatch] = useReducer(PostsReducer, {\n    posts: [],\n    postsLoading: true,\n  });\n  const [showAddPostModal, SetshowAddPostModal] = useState(false);\n  const [showToast, SetshowToast] = useState({\n    show:false,\n    message:'',\n    type:null\n  });\n  \n  //GetAllPost\n  const getPosts = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/posts`);\n      if (response.data.success) {\n        dispatch({ type: POSTS_LOADED_SUCCESS, payload: response.data.posts });\n      }\n    } catch (error) {\n      dispatch({ type: POSTS_LOADED_FAIL });\n    }\n  };\n  //Add Post\n  const addPost = async newPost =>{\n    try {\n      const response = await axios.post(`${apiUrl}/posts`,newPost)\n      if (response.data.success){\n        dispatch({type:ADD_POST,payload :response.data.post})\n        return response.data\n      }\n    } catch (error) {\n      return error.response.data?error.reponse.data : {success:false,message:'Server error'}\n    }\n  }\n  //Delete Post\n  const deletePost = async PostID =>{\n    try {\n      const response = await axios.delete(`${apiUrl}/posts/${PostID}`)\n      if(response.data.success){\n        dispatch({type:DELETE_POST,payload:PostID})\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  //Update Post\n  const updatePost= async \n  //Take away\n  const PostContextData = {\n    postState,\n    getPosts,\n    showAddPostModal,\n    SetshowAddPostModal,\n    addPost,\n    showToast,\n    SetshowToast,\n    deletePost\n  };\n\n  return (\n    <PostContext.Provider value={PostContextData}>\n      {children}\n    </PostContext.Provider>\n  );\n};\n\nexport default PostcontextProvider;\n"]},"metadata":{},"sourceType":"module"}