{"version":3,"sources":["components/Layout/Landing/index.js","reducers/Authreducer.js","contexts/constants.js","utils/setAuthtoken.js","contexts/index.js","components/Layout/Alertmessage.js","components/Auth/LoginForm.js","components/Auth/RegisterForm.js","components/views/Auth.js","reducers/PostsReducer.js","contexts/Postcontext.js","assets/play-btn.svg","assets/pencil.svg","assets/trash.svg","components/posts/ActionButtons.js","components/posts/SinglePost.js","components/posts/AddpostModal.js","assets/plus-circle-fill.svg","components/posts/UpdatepostModal.js","components/views/Dashboard.js","components/Layout/Navbarmenu.js","components/routes/Protectedroutes.js","components/views/About.js","App.js","reportWebVitals.js","index.js"],"names":["index","props","to","authReducer","state","action","type","payload","isAuthticated","user","authLoading","apiUrl","LOCAL_STORAGE_TOKEN_NAME","POSTS_LOADED_FAIL","POSTS_LOADED_SUCCESS","ADD_POST","DELETE_POST","UPDATE_POST","FIND_POST","setAuthtoken","token","axios","defaults","headers","common","AuthContext","createContext","AuthContextProvider","children","useReducer","authState","dispatch","loadUser","a","localStorage","get","response","data","success","removeItem","useEffect","registerUser","userForm","post","setItem","accessToken","messsage","authContextData","loginUser","logoutUser","Provider","value","Alertmessage","info","Alert","variant","message","Login","useContext","useHistory","useState","username","password","loginForm","setloginForm","alert","setAlert","OnchangeLogin","e","target","name","login","preventDefault","loginData","setTimeout","console","log","Form","className","onSubmit","Group","Control","placeholder","required","onChange","Button","size","Register","confirmPassword","registerForm","setRegisterForm","OnchangeRegisterForm","register","registerData","Auth","body","authRoute","Spinner","animation","PostsReducer","posts","postsLoading","filter","x","_id","newPost","map","PostContext","PostcontextProvider","postState","showAddPostModal","SetshowAddPostModal","showUpdatePostModal","SetshowUpdatePostModal","show","showToast","SetshowToast","PostContextData","getPosts","addPost","reponse","deletePost","PostID","delete","updatePost","put","findPost","find","ActionButtons","url","href","src","playIcon","alt","width","height","onClick","postId","bind","editIcon","deleteIcon","SinglePost","status","title","description","border","Card","Body","Title","Row","Col","Badge","pill","Text","AddpostModal","closeDialog","setnewPost","event","resetAddPostdata","onChangeNewPostForm","Modal","onHide","Header","closeButton","id","muted","as","row","Footer","UpdatepostModal","Dashboard","role","length","OverlayTrigger","placement","overlay","Tooltip","AddIcon","Toast","style","position","top","right","onClose","delay","autohide","Navbarmenu","Navbar","expand","bg","Brand","Nav","Link","disabled","Toggle","Collapse","Protectedroutes","Component","component","rest","render","About","App","Postcontext","exact","path","Landing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9481b946.chunk.js","sourcesContent":["import React from 'react'\nimport {Redirect} from 'react-router-dom'\n\nfunction index(props) {\n    return (\n        <Redirect to = '/login' />\n    )\n}\n\nexport default index\n\n","export const authReducer = ( state, action ) => {\n  const {\n    type,\n    payload: { isAuthticated, user },\n  } = action;\n  switch (type) {\n    case \"SET_AUTH\":\n      return {\n        ...state,\n        authLoading: false,\n        isAuthticated,\n        user,\n      };\n    default:\n      return state;\n  }\n};\n","export const apiUrl =\n  process.env.NODE_ENV !== \"production\"\n    ? \"https://peaceful-wave-44302.herokuapp.com/api\"\n    : \"https://protected-sea-62635.herokuapp.com/api\"\nexport const LOCAL_STORAGE_TOKEN_NAME = \"something\";\nexport const POSTS_LOADED_FAIL = \"POSTS_LOADED_FAIL\";\nexport const POSTS_LOADED_SUCCESS = \"POSTS_LOADED_SUCCESS\";\nexport const ADD_POST = \"ADD_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const FIND_POST = \"FIND_POST\";\n\n\n","import axios from 'axios'\n\nconst setAuthtoken = (token)=>{\n    if(token){\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n    }else {\n        delete axios.defaults.headers.common['Authorization']\n    }\n}\n\nexport default setAuthtoken","import { createContext, useReducer, useEffect } from \"react\";\nimport { authReducer } from \"../reducers/Authreducer\";\nimport axios from \"axios\";\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"./constants\";\nimport setAuthtoken from \"./../utils/setAuthtoken\";\n\nexport const AuthContext = createContext();\n\nconst AuthContextProvider = ({ children }) => {\n  const [authState, dispatch] = useReducer(authReducer, {\n    authLoading: true,\n    isAuthticated: false,\n    user: null,\n  });\n\n  //Auth user\n  const loadUser = async () => {\n    if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) {\n      setAuthtoken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n    }\n    try {\n      const response = await axios.get(`${apiUrl}/auth`);\n      if (response.data.success) {\n        dispatch({\n          type: \"SET_AUTH\",\n          payload: { isAuthticated: true, user: response.data.user },\n        });\n      }\n    } catch (error) {\n      localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n      setAuthtoken(null);\n      dispatch({\n        type: \"SET_AUTH\",\n        payload: { isAuthticated: false, user: null },\n      });\n    }\n  };\n\n  useEffect(() => loadUser(), []);\n  \n  //Register\n  const registerUser = async (userForm) => {\n    try {\n      const response = await axios.post(`${apiUrl}/auth/register`, userForm);\n      if (response.data.success) {\n        localStorage.setItem(\n          LOCAL_STORAGE_TOKEN_NAME,\n          response.data.accessToken\n        )\n      }\n      await loadUser()\n      return response.data;\n    } catch (error) {\n      if (error.response.data) return error.response.data;\n      else return { success: false, messsage: error.messsage };\n    }\n  };\n\n  //Login\n  const loginUser = async (userForm) => {\n    try {\n      const response = await axios.post(`${apiUrl}/auth/login`, userForm);\n      if (response.data.success) {\n        localStorage.setItem(\n          LOCAL_STORAGE_TOKEN_NAME,\n          response.data.accessToken\n        )\n      }\n      await loadUser()\n      return response.data;\n    } catch (error) {\n      if (error.response.data) return error.response.data;\n      else return { success: false, messsage: error.messsage };\n    }\n  };\n  //Logout\n  const logoutUser = ()=>{\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME)\n    dispatch({\n      type: \"SET_AUTH\",\n      payload: { isAuthticated: false, user: null },\n    });\n  }\n  //context data\n  const authContextData = { loginUser, authState,logoutUser,registerUser };\n  //return provider\n  return (\n    <AuthContext.Provider value={authContextData}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Alertmessage = ({info}) => {\n    return info == null?  null : (\n        <Alert variant ={`${info.type}`} >{info.message} </Alert>\n    )\n}\n\nexport default Alertmessage\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useState, useContext } from \"react\";\nimport { AuthContext } from \"../../contexts/index\";\nimport Alertmessage from \"../Layout/Alertmessage\";\n\nexport default function Login() {\n  //Context\n  const { loginUser } = useContext(AuthContext);\n\n  //Use history\n  const history = useHistory();\n\n  const [loginForm, setloginForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [alert, setAlert] = useState(null);\n  const { username, password } = loginForm;\n\n  const OnchangeLogin = (e) =>\n    setloginForm({\n      ...loginForm,\n      [e.target.name]: e.target.value,\n    });\n\n  const login = async (e) => {\n    e.preventDefault();\n    try {\n      const loginData = await loginUser(loginForm);\n      if (loginData.success) {\n        // history.push('/dashboard')\n      } else {\n        setAlert({ type: \"danger\", message: loginData.message })\n        setTimeout(()=>setAlert(null),5000)\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <Form className=\"my-4\" onSubmit={login}>\n        <Alertmessage info={alert} />\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            required\n            value={username}\n            onChange={OnchangeLogin}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"my-3\">\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={OnchangeLogin}\n          />\n        </Form.Group>\n        <Button variant=\"success\" type=\"submit\">\n          Login\n        </Button>\n      </Form>\n      <p>\n        Dont have account ?\n        <Link to=\"/register\">\n          <Button variant=\"info\" size=\"sm\" className=\"ml-2\">\n            Register\n          </Button>\n        </Link>\n      </p>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport {useContext,useState} from 'react'\nimport { AuthContext } from \"../../contexts/index\";\nimport Alertmessage from \"../Layout/Alertmessage\";\n\nexport default function Register() {\n  //Context\n  const { registerUser } = useContext(AuthContext);\n  const [registerForm, setRegisterForm] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword : ''\n  });\n\n  const [alert, setAlert] = useState(null);\n  const { username, password,confirmPassword } = registerForm;\n\n  const OnchangeRegisterForm = (e) =>\n    setRegisterForm({\n      ...registerForm,\n      [e.target.name]: e.target.value,\n    });\n\n  const register = async (e) => {\n    e.preventDefault();\n    if(password !==confirmPassword){\n      setAlert({type:'danger',message:'Password do not match'})\n      setTimeout(()=>setAlert(null),5000)\n      return\n    }\n    \n    try {\n      const registerData = await registerUser(registerForm);\n      if (!registerData.success){\n        setAlert({ type: \"danger\", message: registerData.message })\n        setTimeout(()=>setAlert(null),5000)\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <Form className=\"my-4\" onSubmit= {register} >\n        <Alertmessage info = {alert} />\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            required\n            value = {username}\n            onChange= {OnchangeRegisterForm}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"my-3\">\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            required\n            value = {password}\n            onChange= {OnchangeRegisterForm}\n          />\n        </Form.Group>\n        <Form.Group className=\"my-3\">\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            name=\"confirmPassword\"\n            required\n            value = {confirmPassword}\n            onChange= {OnchangeRegisterForm}\n          />\n        </Form.Group>\n        <Button variant=\"success\" type=\"submit\">\n          Register\n        </Button>\n      </Form>\n      <p>\n        Already have account ?\n        <Link to=\"/Login\">\n          <Button variant=\"info\" size=\"sm\" className=\"ml-2\">\n            Login\n          </Button>\n        </Link>\n      </p>\n    </>\n  );\n}\n","import React from \"react\";\nimport Login from \"../Auth/LoginForm\";\nimport Register from \"../Auth/RegisterForm\";\nimport { AuthContext } from \"../../contexts/index\";\nimport { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction Auth({ authRoute }) {\n  const {\n    authState: { authLoading, isAuthticated },\n  } = useContext(AuthContext);\n  let body;\n  if (authLoading) {\n    body = <div className=\"d-flex justify-content-center mt-2\">\n      <Spinner animation=\"border\" variant=\"info\" />\n    </div>\n  } else if (isAuthticated) return <Redirect to=\"/dashboard\"/>;\n  else\n    {\n      body = (\n        <>\n          Learnit\n          {authRoute === \"login\" && <Login />}\n          {authRoute === \"register\" && <Register />}\n        </>\n      )\n    }\n  return (\n    <div className=\"landing\">\n      <div className=\"dark-overlay\">\n        <div className=\"landing-inner\">\n          <h1>Learnit</h1>\n          <h4> Keep track what you are learning</h4>\n          {body}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Auth;\n","import { POSTS_LOADED_FAIL, POSTS_LOADED_SUCCESS,ADD_POST, DELETE_POST,UPDATE_POST,FIND_POST} from \"../contexts/constants\";\n\nexport const PostsReducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case POSTS_LOADED_SUCCESS:\n      return {\n        ...state,\n        posts: payload,\n        postsLoading: false,\n      };\n    case POSTS_LOADED_FAIL:\n      return {\n        ...state,\n        posts: [],\n        postsLoading: false,\n      };\n      case ADD_POST:\n        return {\n          ...state,\n          posts:[...state.posts,payload]\n        }\n        case DELETE_POST:\n          console.log(state)\n        return {\n          ...state,\n          posts:state.posts.filter(x=>x._id !== payload)\n        }\n        ;\n        case UPDATE_POST:\n          const newPost = state.posts.map(post=>{\n            if(post._id===payload._id){\n              return payload\n            }else return post\n          })\n          return {\n            ...state,\n            posts:newPost\n          }\n        ;\n        case FIND_POST:\n          return {\n            ...state,\n            post : payload\n          }\n          ;\n    default:\n      return state;\n  }\n};\n\n\n","import { createContext, useReducer } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport {\n  apiUrl,\n  POSTS_LOADED_SUCCESS,\n  POSTS_LOADED_FAIL,\n  ADD_POST,\n  DELETE_POST,\n  UPDATE_POST,\n  FIND_POST,\n} from \"./constants\";\nimport { PostsReducer } from \"../reducers/PostsReducer\";\nimport { useState } from \"react\";\n\nexport const PostContext = createContext();\n\nconst PostcontextProvider = ({ children }) => {\n  //State\n  const [postState, dispatch] = useReducer(PostsReducer, {\n    post: null,\n    posts: [],\n    postsLoading: true,\n  });\n  const [showAddPostModal, SetshowAddPostModal] = useState(false);\n  const [showUpdatePostModal, SetshowUpdatePostModal] = useState(false);\n  const [showToast, SetshowToast] = useState({\n    show: false,\n    message: \"\",\n    type: null,\n  });\n\n  //GetAllPost\n  const getPosts = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/posts`);\n      if (response.data.success) {\n        dispatch({ type: POSTS_LOADED_SUCCESS, payload: response.data.posts });\n      }\n    } catch (error) {\n      dispatch({ type: POSTS_LOADED_FAIL });\n    }\n  };\n  //Add Post\n  const addPost = async (newPost) => {\n    try {\n      const response = await axios.post(`${apiUrl}/posts`, newPost);\n      if (response.data.success) {\n        dispatch({ type: ADD_POST, payload: response.data.post });\n        return response.data;\n      }\n    } catch (error) {\n      return error.response.data\n        ? error.reponse.data\n        : { success: false, message: \"Server error\" };\n    }\n  };\n  //Delete Post\n  const deletePost = async (PostID) => {\n    try {\n      const response = await axios.delete(`${apiUrl}/posts/${PostID}`);\n      if (response.data.success) {\n        dispatch({ type: DELETE_POST, payload: PostID });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  //Find post when user is updating\n  const findPost = (PostID) => {\n    const post = postState.posts.find((x) => x._id === PostID);\n    dispatch({ type: FIND_POST, payload: post });\n  };\n\n  //Update Post\n  const updatePost = async (updatePost) => {\n    try {\n      const response = await axios.put(\n        `${apiUrl}/posts/${updatePost._id}`,\n        updatePost\n      );\n      if (response.data.success) {\n        dispatch({ type: UPDATE_POST, payload: response.data.post });\n        return response.data;\n      }\n    } catch (error) {\n      return error.response.data\n        ? error.reponse.data\n        : { success: false, message: \"Server error\" };\n    }\n  };\n  //Take away\n  const PostContextData = {\n    postState,\n    getPosts,\n    showAddPostModal,\n    SetshowAddPostModal,\n    addPost,\n    showToast,\n    SetshowToast,\n    deletePost,\n    updatePost,\n    findPost,\n    SetshowUpdatePostModal,\n    showUpdatePostModal,\n  };\n\n  return (\n    <PostContext.Provider value={PostContextData}>\n      {children}\n    </PostContext.Provider>\n  );\n};\n\nexport default PostcontextProvider;\n","export default __webpack_public_path__ + \"static/media/play-btn.4f64bd9b.svg\";","export default __webpack_public_path__ + \"static/media/pencil.f9418d96.svg\";","export default __webpack_public_path__ + \"static/media/trash.61142061.svg\";","import React, { useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport playIcon from \"../../assets/play-btn.svg\";\nimport editIcon from \"../../assets/pencil.svg\";\nimport deleteIcon from \"../../assets/trash.svg\";\nimport { PostContext } from \"../../contexts/Postcontext\";\n\nconst ActionButtons = ({ url, _id }) => {\n  const {deletePost,findPost,SetshowUpdatePostModal} =useContext(PostContext)\n  const choosePost = (postId)=>{\n    findPost(postId)\n    SetshowUpdatePostModal(true)\n    \n  }\n\n  return (\n    <>\n      <Button className=\"post-button\" href={url} target=\"_blank\">\n        <img src={playIcon} alt=\"play\" width=\"32\" height=\"32\" />\n      </Button>\n      <Button className=\"post-button\" onClick={choosePost.bind(this,_id)}>\n        <img src={editIcon} alt=\"EditIcon\" width=\"24\" height=\"24\" />\n      </Button>\n      <Button className=\"post-button\" onClick={deletePost.bind(this,_id)} >\n        <img src={deleteIcon} alt=\"DeleteIcon\" width=\"24\" height=\"24\" />\n      </Button>\n    </>\n  );\n};\n\nexport default ActionButtons;\n","import React from \"react\";\nimport { Card, Row, Badge, Button, Col } from \"react-bootstrap\";\nimport ActionButtons from \"./ActionButtons\";\n\nconst SinglePost = ({ post: { _id, status, title, description, url } }) => {\n  var border =status === \"LEARNED\"\n  ? \"success\"\n  : status === \"LEARNING\"\n  ? \"warning\"\n  : \"danger\";\n\n  return (\n    <Card className={`shadow border border-${border}`}>\n      <Card.Body>\n        <Card.Title>\n          <Row>\n            <Col>\n              <p className=\"post-title\">{title}</p>\n              <Badge\n                pill\n                variant={\n                  ` border border-${border}`\n                }\n                className={`text-${border}`}\n              >\n                {status}\n              </Badge>\n            </Col>\n            <Col className=\"text-right\">\n              <ActionButtons url={url} _id={_id} />\n            </Col>\n          </Row>\n        </Card.Title>\n        <Card.Text>{description}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SinglePost;\n","import React from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useContext, useState } from \"react\";\nimport { PostContext } from \"../../contexts/Postcontext\";\n\nconst AddpostModal = () => {\n  //Context\n  const { SetshowAddPostModal, showAddPostModal, addPost, SetshowToast } =\n    useContext(PostContext);\n  const closeDialog = () => {\n    setnewPost({\n      title: \"\",\n      description: \"\",\n      url: \"\",\n      status: \"TO LEARN\",\n    });\n    SetshowAddPostModal(false);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const { success, message } = await addPost(newPost);\n    resetAddPostdata();\n    SetshowToast({ show: true, message, type: true ? \"success\" : \"danger\" });\n  };\n\n  const resetAddPostdata = () => {\n    setnewPost({\n      title: \"\",\n      description: \"\",\n      url: \"\",\n      status: \"TO LEARN\",\n    });\n    SetshowAddPostModal(false);\n  };\n  //State\n  const [newPost, setnewPost] = useState({\n    title: \"\",\n    description: \"\",\n    url: \"\",\n    status: \"TO LEARN\",\n  });\n  const { title, description, url } = newPost;\n\n  const onChangeNewPostForm = (e) =>\n    setnewPost({\n      ...newPost,\n      [e.target.name]: e.target.value,\n    });\n\n  return (\n    <Modal show={showAddPostModal} animation={false} onHide={closeDialog}>\n      <Modal.Header closeButton>\n        <Modal.Title>What do you want to learn ?</Modal.Title>\n      </Modal.Header>\n      <Form onSubmit={onSubmit}>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Title\"\n              name=\"title\"\n              required\n              aria-describedby=\"title-help\"\n              value={title}\n              onChange={onChangeNewPostForm}\n            />\n            <Form.Text id=\"title-help\" muted>\n              Required\n            </Form.Text>\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              as=\"textarea\"\n              placeholder=\"Description\"\n              row={3}\n              name=\"description\"\n              value={description}\n              onChange={onChangeNewPostForm}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Youtube Tutorial URL\"\n              name=\"url\"\n              value={url}\n              onChange={onChangeNewPostForm}\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeDialog}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n          >\n            Learnit\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AddpostModal;\n","export default __webpack_public_path__ + \"static/media/plus-circle-fill.a9d0f92d.svg\";","import React, { useEffect } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useContext, useState } from \"react\";\nimport { PostContext } from \"../../contexts/Postcontext\";\n\nconst UpdatepostModal = () => {\n  //Context\n  const {\n    SetshowUpdatePostModal,\n    showUpdatePostModal,\n    updatePost,\n    SetshowToast,\n    postState: { post },\n  } = useContext(PostContext);\n\n  //Render post\n  useEffect(() => {\n    setnewPost(post);\n  }, [post]);\n\n  //Close\n  const closeDialog = () => {\n    setnewPost(post);\n    SetshowUpdatePostModal(false);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const { success, message } = await updatePost(newPost);\n    closeDialog();\n    SetshowToast({ show: true, message, type: true ? \"success\" : \"danger\" });\n  };\n\n  //State\n  const [newPost, setnewPost] = useState(post);\n  const { title, description, url, status } = newPost;\n\n  const onChangeNewPostForm = (e) =>\n    setnewPost({\n      ...newPost,\n      [e.target.name]: e.target.value,\n    });\n\n  return (\n    <Modal show={showUpdatePostModal} onHide={closeDialog}>\n      <Modal.Header closeButton>\n        <Modal.Title>Making Progress ?</Modal.Title>\n      </Modal.Header>\n      <Form onSubmit={onSubmit}>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Title\"\n              name=\"title\"\n              required\n              aria-describedby=\"title-help\"\n              value={title}\n              onChange={onChangeNewPostForm}\n            />\n            <Form.Text id=\"title-help\" muted>\n              Required\n            </Form.Text>\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              as=\"textarea\"\n              placeholder=\"Description\"\n              row={3}\n              name=\"description\"\n              value={description}\n              onChange={onChangeNewPostForm}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Youtube Tutorial URL\"\n              name=\"url\"\n              value={url}\n              onChange={onChangeNewPostForm}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              as=\"select\"\n              name=\"status\"\n              value={status}\n              onChange={onChangeNewPostForm}\n            >\n              <option value=\"TO LEARN\"> TO LEARN</option>\n              <option value=\"LEARNING\"> LEARNING</option>\n              <option value=\"LEARNED\"> LEARNED</option>\n            </Form.Control>\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeDialog}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" type=\"submit\">\n            Learnit\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default UpdatepostModal;\n","import React from \"react\";\nimport { PostContext } from \"../../contexts/Postcontext\";\nimport { useContext, useEffect } from \"react\";\nimport {\n  Spinner,\n  Card,\n  Button,\n  Row,\n  Col,\n  OverlayTrigger,\n  Tooltip,\n  Toast,\n} from \"react-bootstrap\";\nimport { AuthContext } from \"../../contexts/index\";\nimport SinglePost from \"../posts/SinglePost\";\nimport AddpostModal from \"../posts/AddpostModal\";\nimport AddIcon from \"../../assets/plus-circle-fill.svg\";\nimport UpdatepostModal from '../posts/UpdatepostModal'\n\nconst Dashboard = () => {\n  const {\n    authState: {\n      user: { username },\n    },\n  } = useContext(AuthContext);\n\n  const {\n    postState: { posts, postsLoading,post },\n    getPosts,\n    SetshowAddPostModal,\n    showToast: { show, message, type },\n    SetshowToast,\n  } = useContext(PostContext);\n\n  //Start : Get all posts\n  useEffect(() => getPosts(), []);\n  let body = null;\n  if (postsLoading) {\n    body = (\n      <div className=\"spinner-container\">\n        <Spinner animation=\"border\" role=\"status\" variant=\"info\" />\n      </div>\n    );\n  } else if (posts.length == 0) {\n    body = (\n      <>\n        <Card className=\"text-center mx-5 my-5\">\n          <Card.Header as=\"h1\">Hi {username}</Card.Header>\n          <Card.Body>\n            <Card.Title>Welcome to my website</Card.Title>\n            <Card.Text>\n              Click the button below to track your first skill to learn\n            </Card.Text>\n            <Button variant=\"primary\" onClick={SetshowAddPostModal.bind(this,true)}>Learn It</Button>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  } else {\n    body = (\n      <>\n        <Row className=\"row-cols-1 row-cols-md-3 g-4 mx-auto mt-3\">\n          {posts.map((post) => {\n            return (\n              <Col key={post._id} className=\"my-2\">\n                <SinglePost post={post} />\n              </Col>\n            );\n          })}\n        </Row>\n\n        {/* Open Add Post Modal */}\n        <OverlayTrigger placement='left' overlay={<Tooltip>Add a new thing to learn</Tooltip>}>\n        <Button\n          className=\"btn-floating\"\n          onClick={SetshowAddPostModal.bind(this, true)}\n        >\n          <img src={AddIcon} alt=\"Addicon\" width=\"60\" height=\"60\" />\n        </Button>\n        </OverlayTrigger>\n      </>\n    );\n  }\n\n  return (\n    <>\n     <Toast\n        show={show}\n        style={{ position: \"fiexed\", top: \"20%\", right: \"10px\" }}\n        className={`bg-${type} text-white float-left`}\n        onClose={SetshowToast.bind(this,{show:false,message:'',type:null})}\n        delay={3000}\n        autohide\n      >\n        <Toast.Body>\n          <strong> {message} </strong>\n        </Toast.Body>\n      </Toast>\n      {body}\n      <AddpostModal />\n      {post !==null && <UpdatepostModal/>}\n      {/* After post is added ,show toast */}\n     \n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport {AuthContext} from '../../contexts/index'\nimport { useContext } from \"react\";\n\n\nconst Navbarmenu = () => {\n  const {authState: {\n    user : {username}\n  },\n  logoutUser\n  } = useContext(AuthContext)\n  return (\n   <>\n    <Navbar expand=\"lg\" bg=\"primary\" variant=\"dark\" className=\"shadow\">\n      <Navbar.Brand className=\"font-weight-bolder text-white\">\n      <Nav.Link className=\"font-weight-bolder text-white  \" disabled>\n          Welcome {username}\n      </Nav.Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link\n            className=\"font-weight-bolder text-white\"\n            to=\"/dashboard\"\n            as={Link}\n          >\n            Dashboard\n          </Nav.Link>\n          <Nav.Link\n            className=\"font-weight-bolder text-white\"\n            to=\"/about\"\n            as={Link}\n          >\n            About\n          </Nav.Link>\n        </Nav>\n        <Nav>\n          <Button className=\"font-weight-bolder text-white btn\" onClick={logoutUser}>\n           Logout\n          </Button>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n   </>\n  );\n};\n\nexport default Navbarmenu;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../contexts\";\nimport { Route, Redirect } from \"react-router\";\nimport Navbarmenu from \"../Layout/Navbarmenu\";\n\nconst Protectedroutes = ({ component: Component, ...rest }) => {\n  const {\n    authState: { authLoading, isAuthticated },\n  } = useContext(AuthContext);\n  if (authLoading) {\n    return (\n      <>\n        <div className=\"d-flex justify-content-center mt-2\">\n          <Spinner animation=\"border\" variant=\"info\" />\n        </div>\n      </>\n    );\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuthticated ? (\n          <>\n            <Navbarmenu />\n            <Component {...rest} {...props} />\n          </>\n        ) : (\n          <Redirect to=\"/Login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default Protectedroutes;\n","import React from 'react'\n\nconst About = () => {\n    return (\n       <h5> Welcome to about </h5>\n    )\n}\n\nexport default About\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Landing from \"./components/Layout/Landing/index\";\nimport Auth from \"./components/views/Auth\";\nimport AuthContextProvider from \"./contexts/index\";\nimport Dashboard from './components/views/Dashboard'\nimport Protectedroutes from \"./components/routes/Protectedroutes\";\nimport About from \"./components/views/About\";\nimport PostcontextProvider from './contexts/Postcontext'\n\nfunction App() {\n  return (\n   <AuthContextProvider>\n     <PostcontextProvider>\n      <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route\n          exact\n          path=\"/login\"\n          render={(props) => <Auth {...props} authRoute=\"login\" />}\n        />\n        <Route\n          exact\n          path=\"/register\"\n          render={(props) => <Auth {...props} authRoute=\"register\" />}\n        />\n        <Protectedroutes\n          exact\n          path=\"/dashboard\"\n          component ={Dashboard}\n        />\n        <Protectedroutes\n          exact\n          path=\"/about\"\n          component ={About}\n        />\n      </Switch>\n    </Router>\n    </PostcontextProvider>\n   </AuthContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}